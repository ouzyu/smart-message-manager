services:
  postgres:
    image: postgres:16
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: smart_message_manager_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_ROOT_PASSWORD: root_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U app_user -d smart_message_manager_db']
      timeout: 10s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile.dev
    restart: always
    ports:
      - '3001:3001'
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
    volumes:
      - ./packages/backend/src:/app/packages/backend/src
      - ./packages/models-client:/app/packages/models-client
      - ./packages/models:/app/packages/models
      - ./packages/slack:/app/packages/slack
      - /app/packages/backend/node_modules
      - /app/packages/models/node_modules
      - /app/packages/slack/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile.dev
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3001
      - WATCHPACK_POLLING=true
    volumes:
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/models-types:/app/packages/models-types
      - ./packages/frontend/public:/app/packages/frontend/public
      - ./packages/frontend/next.config.ts:/app/packages/frontend/next.config.ts
      - /app/packages/frontend/node_modules
      - /app/packages/frontend/.next
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
